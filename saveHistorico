library("swirl")
swirl(0
)
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z * 2 + 100
my_sqrt <- z - 1
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,
| 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 100
z * 2 + 1000
my_div
getwd(0
)
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
list.files(args())
args(list.files)
old.dir <- getwd(0
)
)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files
dir()
ls()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path()
file.path("mytest3.R")
file.path("folder1", "folder2")
dir(0
)
dir()
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd("testdir3")
dir.create("testdir3")
setwd(old.dir)
1:20
pi:10
15:1
:
':'
?':'
seq(1,20)
seq(0, 10, by=0.5)
my_seq <-  seq(5, 10, length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect = c(0.5, 55, -10, 6)
?c
num_vect
num_vect = c(0.5, 55, -10, 6)
num_vect = c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
new_tf <- num_vect >= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Herculano Cunha")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
z
my_data <- sample(c(y, z), 100)
my_data
my_na <- is.na(my_data)
my_na
my_data
my_data == NA
sum(my_na)
my_data
my_data -- NaN
0/0
inf - inf
0 - 0
my_data - my_data
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c()]
c(3, 5, 7)
c(3[1], 5[2], 7[3])
c(3(1), 5(2), 7(3))
c(3, 5, 7)
a <- c(3, 5, 7)
[c(3,5,7) > 10]
o <- c(3,5,7)
o[o > 10]
o[o > 0]
info()
skip()
x (i.e. x[0])
c(x[0]:40)
skip()
x[3000]
x[c(-2, -10)]
x[c(2, 10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical("vect","vect2")
skip(0
)
skip()
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
my_vector
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
skip()
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
patients
my_matrix
cbind(patients, my_matrix)
my_matrix
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
skip(0
)
skip()
colnames(cnames, my_data)
skip()
my_data
1 == 1
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 == 7
5 != 7
skip()
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
skip()
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
skip()
boring_function('My first function!')
boring_function
skip()
my_mean(c(4,5,10))
skip()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5 )
remainder(4, div = 2)
args(remainder)
skip()
skip()
 evaluate(function(x){x+1}, 6)
skip()
skip()
skip()
paste("Programming", "is", "fun!")
skip()
skip()
skip()
skip()
skip()
skip()
head(flags)
dim(flags)
class(flags)
flags
cls_list <- lapply(flags, class)
cls_list
skip()
as.character(cls_list)
?sapply
skip()
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
skip()
skip()
skip()
flag_shapes <- flags[, 19:23]
lapply(flag_shapes)
lapply(flag_shapes, sum)
lapply(flag_shapes, range)
shape_mat
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
skip()
skip()
skip()
sapply(flags, unique)
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
flgs
flags
table(flags$landmass)
skip()
skip()
tapply(flags$population, flags$red, summary)
skip()
ls()
class(plants)
dim(plants)
nrou(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
 sample(1:6, 4, replace = TRUE)
(1/6)^4 = 0.00077
(1/6)^4 = 0.00077
sample(0
)
sample(1:6, 4, replace = TRUE)
skip()
LETTERS
sample(LETTERS)
skip()
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7).
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(heads(flips2))
sum(flips2.heads)
skip()
?rnorm
rnorm(10)
skip()
?rpois
rpois(5, lambda = 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
skip()
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
d2
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
skip()
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
skip()
months(d1)
months(t1)
quarters(t2)
skip()
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
skip()
skip()
 difftime(Sys.time(), t1, units = 'days') 
data(cars)
?cars
head(cars)
plot(cars)
?plot
skip()
skip()
skip()
skip()
skip()
skip()
skip()
plot(cars, sub = "My Plot Subtitle", col = 2)
plot(cars, col = 2)
skip()
plot(cars, pch =2)
skip()
?boxplot
skip()
hist(mtcars$mpg)
save.image("C:\\Users\\herculanocm\\Documents\\POS\\r\\saveData")
